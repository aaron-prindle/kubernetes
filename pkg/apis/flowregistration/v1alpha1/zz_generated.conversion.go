// +build !ignore_autogenerated

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	unsafe "unsafe"

	v1alpha1 "k8s.io/api/flowregistration/v1alpha1"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	flowregistration "k8s.io/kubernetes/pkg/apis/flowregistration"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*v1alpha1.And)(nil), (*flowregistration.And)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_And_To_flowregistration_And(a.(*v1alpha1.And), b.(*flowregistration.And), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*flowregistration.And)(nil), (*v1alpha1.And)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_flowregistration_And_To_v1alpha1_And(a.(*flowregistration.And), b.(*v1alpha1.And), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.Equals)(nil), (*flowregistration.Equals)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Equals_To_flowregistration_Equals(a.(*v1alpha1.Equals), b.(*flowregistration.Equals), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*flowregistration.Equals)(nil), (*v1alpha1.Equals)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_flowregistration_Equals_To_v1alpha1_Equals(a.(*flowregistration.Equals), b.(*v1alpha1.Equals), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.FlowDistinguisher)(nil), (*flowregistration.FlowDistinguisher)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_FlowDistinguisher_To_flowregistration_FlowDistinguisher(a.(*v1alpha1.FlowDistinguisher), b.(*flowregistration.FlowDistinguisher), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*flowregistration.FlowDistinguisher)(nil), (*v1alpha1.FlowDistinguisher)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_flowregistration_FlowDistinguisher_To_v1alpha1_FlowDistinguisher(a.(*flowregistration.FlowDistinguisher), b.(*v1alpha1.FlowDistinguisher), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.FlowSchema)(nil), (*flowregistration.FlowSchema)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_FlowSchema_To_flowregistration_FlowSchema(a.(*v1alpha1.FlowSchema), b.(*flowregistration.FlowSchema), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*flowregistration.FlowSchema)(nil), (*v1alpha1.FlowSchema)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_flowregistration_FlowSchema_To_v1alpha1_FlowSchema(a.(*flowregistration.FlowSchema), b.(*v1alpha1.FlowSchema), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.FlowSchemaList)(nil), (*flowregistration.FlowSchemaList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_FlowSchemaList_To_flowregistration_FlowSchemaList(a.(*v1alpha1.FlowSchemaList), b.(*flowregistration.FlowSchemaList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*flowregistration.FlowSchemaList)(nil), (*v1alpha1.FlowSchemaList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_flowregistration_FlowSchemaList_To_v1alpha1_FlowSchemaList(a.(*flowregistration.FlowSchemaList), b.(*v1alpha1.FlowSchemaList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.FlowSchemaSpec)(nil), (*flowregistration.FlowSchemaSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_FlowSchemaSpec_To_flowregistration_FlowSchemaSpec(a.(*v1alpha1.FlowSchemaSpec), b.(*flowregistration.FlowSchemaSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*flowregistration.FlowSchemaSpec)(nil), (*v1alpha1.FlowSchemaSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_flowregistration_FlowSchemaSpec_To_v1alpha1_FlowSchemaSpec(a.(*flowregistration.FlowSchemaSpec), b.(*v1alpha1.FlowSchemaSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.InSet)(nil), (*flowregistration.InSet)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_InSet_To_flowregistration_InSet(a.(*v1alpha1.InSet), b.(*flowregistration.InSet), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*flowregistration.InSet)(nil), (*v1alpha1.InSet)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_flowregistration_InSet_To_v1alpha1_InSet(a.(*flowregistration.InSet), b.(*v1alpha1.InSet), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.Match)(nil), (*flowregistration.Match)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Match_To_flowregistration_Match(a.(*v1alpha1.Match), b.(*flowregistration.Match), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*flowregistration.Match)(nil), (*v1alpha1.Match)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_flowregistration_Match_To_v1alpha1_Match(a.(*flowregistration.Match), b.(*v1alpha1.Match), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.MatchAll)(nil), (*flowregistration.MatchAll)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_MatchAll_To_flowregistration_MatchAll(a.(*v1alpha1.MatchAll), b.(*flowregistration.MatchAll), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*flowregistration.MatchAll)(nil), (*v1alpha1.MatchAll)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_flowregistration_MatchAll_To_v1alpha1_MatchAll(a.(*flowregistration.MatchAll), b.(*v1alpha1.MatchAll), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.NotEquals)(nil), (*flowregistration.NotEquals)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_NotEquals_To_flowregistration_NotEquals(a.(*v1alpha1.NotEquals), b.(*flowregistration.NotEquals), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*flowregistration.NotEquals)(nil), (*v1alpha1.NotEquals)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_flowregistration_NotEquals_To_v1alpha1_NotEquals(a.(*flowregistration.NotEquals), b.(*v1alpha1.NotEquals), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.NotInSet)(nil), (*flowregistration.NotInSet)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_NotInSet_To_flowregistration_NotInSet(a.(*v1alpha1.NotInSet), b.(*flowregistration.NotInSet), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*flowregistration.NotInSet)(nil), (*v1alpha1.NotInSet)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_flowregistration_NotInSet_To_v1alpha1_NotInSet(a.(*flowregistration.NotInSet), b.(*v1alpha1.NotInSet), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.NotMatchAll)(nil), (*flowregistration.NotMatchAll)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_NotMatchAll_To_flowregistration_NotMatchAll(a.(*v1alpha1.NotMatchAll), b.(*flowregistration.NotMatchAll), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*flowregistration.NotMatchAll)(nil), (*v1alpha1.NotMatchAll)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_flowregistration_NotMatchAll_To_v1alpha1_NotMatchAll(a.(*flowregistration.NotMatchAll), b.(*v1alpha1.NotMatchAll), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.NotPatternMatch)(nil), (*flowregistration.NotPatternMatch)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_NotPatternMatch_To_flowregistration_NotPatternMatch(a.(*v1alpha1.NotPatternMatch), b.(*flowregistration.NotPatternMatch), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*flowregistration.NotPatternMatch)(nil), (*v1alpha1.NotPatternMatch)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_flowregistration_NotPatternMatch_To_v1alpha1_NotPatternMatch(a.(*flowregistration.NotPatternMatch), b.(*v1alpha1.NotPatternMatch), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.NotSuperSet)(nil), (*flowregistration.NotSuperSet)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_NotSuperSet_To_flowregistration_NotSuperSet(a.(*v1alpha1.NotSuperSet), b.(*flowregistration.NotSuperSet), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*flowregistration.NotSuperSet)(nil), (*v1alpha1.NotSuperSet)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_flowregistration_NotSuperSet_To_v1alpha1_NotSuperSet(a.(*flowregistration.NotSuperSet), b.(*v1alpha1.NotSuperSet), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.PatternMatch)(nil), (*flowregistration.PatternMatch)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_PatternMatch_To_flowregistration_PatternMatch(a.(*v1alpha1.PatternMatch), b.(*flowregistration.PatternMatch), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*flowregistration.PatternMatch)(nil), (*v1alpha1.PatternMatch)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_flowregistration_PatternMatch_To_v1alpha1_PatternMatch(a.(*flowregistration.PatternMatch), b.(*v1alpha1.PatternMatch), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.RequestPriority)(nil), (*flowregistration.RequestPriority)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_RequestPriority_To_flowregistration_RequestPriority(a.(*v1alpha1.RequestPriority), b.(*flowregistration.RequestPriority), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*flowregistration.RequestPriority)(nil), (*v1alpha1.RequestPriority)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_flowregistration_RequestPriority_To_v1alpha1_RequestPriority(a.(*flowregistration.RequestPriority), b.(*v1alpha1.RequestPriority), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.SuperSet)(nil), (*flowregistration.SuperSet)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_SuperSet_To_flowregistration_SuperSet(a.(*v1alpha1.SuperSet), b.(*flowregistration.SuperSet), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*flowregistration.SuperSet)(nil), (*v1alpha1.SuperSet)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_flowregistration_SuperSet_To_v1alpha1_SuperSet(a.(*flowregistration.SuperSet), b.(*v1alpha1.SuperSet), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_And_To_flowregistration_And(in *v1alpha1.And, out *flowregistration.And, s conversion.Scope) error {
	if err := Convert_v1alpha1_MatchAll_To_flowregistration_MatchAll(&in.MatchAll, &out.MatchAll, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_Equals_To_flowregistration_Equals(&in.Equals, &out.Equals, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_SuperSet_To_flowregistration_SuperSet(&in.SuperSet, &out.SuperSet, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_PatternMatch_To_flowregistration_PatternMatch(&in.PatternMatch, &out.PatternMatch, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_InSet_To_flowregistration_InSet(&in.InSet, &out.InSet, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_NotEquals_To_flowregistration_NotEquals(&in.NotEquals, &out.NotEquals, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_NotPatternMatch_To_flowregistration_NotPatternMatch(&in.NotPatternMatch, &out.NotPatternMatch, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_NotInSet_To_flowregistration_NotInSet(&in.NotInSet, &out.NotInSet, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_NotSuperSet_To_flowregistration_NotSuperSet(&in.NotSuperSet, &out.NotSuperSet, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_NotMatchAll_To_flowregistration_NotMatchAll(&in.NotMatchAll, &out.NotMatchAll, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_And_To_flowregistration_And is an autogenerated conversion function.
func Convert_v1alpha1_And_To_flowregistration_And(in *v1alpha1.And, out *flowregistration.And, s conversion.Scope) error {
	return autoConvert_v1alpha1_And_To_flowregistration_And(in, out, s)
}

func autoConvert_flowregistration_And_To_v1alpha1_And(in *flowregistration.And, out *v1alpha1.And, s conversion.Scope) error {
	if err := Convert_flowregistration_MatchAll_To_v1alpha1_MatchAll(&in.MatchAll, &out.MatchAll, s); err != nil {
		return err
	}
	if err := Convert_flowregistration_Equals_To_v1alpha1_Equals(&in.Equals, &out.Equals, s); err != nil {
		return err
	}
	if err := Convert_flowregistration_SuperSet_To_v1alpha1_SuperSet(&in.SuperSet, &out.SuperSet, s); err != nil {
		return err
	}
	if err := Convert_flowregistration_PatternMatch_To_v1alpha1_PatternMatch(&in.PatternMatch, &out.PatternMatch, s); err != nil {
		return err
	}
	if err := Convert_flowregistration_InSet_To_v1alpha1_InSet(&in.InSet, &out.InSet, s); err != nil {
		return err
	}
	if err := Convert_flowregistration_NotEquals_To_v1alpha1_NotEquals(&in.NotEquals, &out.NotEquals, s); err != nil {
		return err
	}
	if err := Convert_flowregistration_NotPatternMatch_To_v1alpha1_NotPatternMatch(&in.NotPatternMatch, &out.NotPatternMatch, s); err != nil {
		return err
	}
	if err := Convert_flowregistration_NotInSet_To_v1alpha1_NotInSet(&in.NotInSet, &out.NotInSet, s); err != nil {
		return err
	}
	if err := Convert_flowregistration_NotSuperSet_To_v1alpha1_NotSuperSet(&in.NotSuperSet, &out.NotSuperSet, s); err != nil {
		return err
	}
	if err := Convert_flowregistration_NotMatchAll_To_v1alpha1_NotMatchAll(&in.NotMatchAll, &out.NotMatchAll, s); err != nil {
		return err
	}
	return nil
}

// Convert_flowregistration_And_To_v1alpha1_And is an autogenerated conversion function.
func Convert_flowregistration_And_To_v1alpha1_And(in *flowregistration.And, out *v1alpha1.And, s conversion.Scope) error {
	return autoConvert_flowregistration_And_To_v1alpha1_And(in, out, s)
}

func autoConvert_v1alpha1_Equals_To_flowregistration_Equals(in *v1alpha1.Equals, out *flowregistration.Equals, s conversion.Scope) error {
	out.Field = in.Field
	out.Value = in.Value
	return nil
}

// Convert_v1alpha1_Equals_To_flowregistration_Equals is an autogenerated conversion function.
func Convert_v1alpha1_Equals_To_flowregistration_Equals(in *v1alpha1.Equals, out *flowregistration.Equals, s conversion.Scope) error {
	return autoConvert_v1alpha1_Equals_To_flowregistration_Equals(in, out, s)
}

func autoConvert_flowregistration_Equals_To_v1alpha1_Equals(in *flowregistration.Equals, out *v1alpha1.Equals, s conversion.Scope) error {
	out.Field = in.Field
	out.Value = in.Value
	return nil
}

// Convert_flowregistration_Equals_To_v1alpha1_Equals is an autogenerated conversion function.
func Convert_flowregistration_Equals_To_v1alpha1_Equals(in *flowregistration.Equals, out *v1alpha1.Equals, s conversion.Scope) error {
	return autoConvert_flowregistration_Equals_To_v1alpha1_Equals(in, out, s)
}

func autoConvert_v1alpha1_FlowDistinguisher_To_flowregistration_FlowDistinguisher(in *v1alpha1.FlowDistinguisher, out *flowregistration.FlowDistinguisher, s conversion.Scope) error {
	out.Source = flowregistration.FlowSource(in.Source)
	return nil
}

// Convert_v1alpha1_FlowDistinguisher_To_flowregistration_FlowDistinguisher is an autogenerated conversion function.
func Convert_v1alpha1_FlowDistinguisher_To_flowregistration_FlowDistinguisher(in *v1alpha1.FlowDistinguisher, out *flowregistration.FlowDistinguisher, s conversion.Scope) error {
	return autoConvert_v1alpha1_FlowDistinguisher_To_flowregistration_FlowDistinguisher(in, out, s)
}

func autoConvert_flowregistration_FlowDistinguisher_To_v1alpha1_FlowDistinguisher(in *flowregistration.FlowDistinguisher, out *v1alpha1.FlowDistinguisher, s conversion.Scope) error {
	out.Source = v1alpha1.FlowSource(in.Source)
	return nil
}

// Convert_flowregistration_FlowDistinguisher_To_v1alpha1_FlowDistinguisher is an autogenerated conversion function.
func Convert_flowregistration_FlowDistinguisher_To_v1alpha1_FlowDistinguisher(in *flowregistration.FlowDistinguisher, out *v1alpha1.FlowDistinguisher, s conversion.Scope) error {
	return autoConvert_flowregistration_FlowDistinguisher_To_v1alpha1_FlowDistinguisher(in, out, s)
}

func autoConvert_v1alpha1_FlowSchema_To_flowregistration_FlowSchema(in *v1alpha1.FlowSchema, out *flowregistration.FlowSchema, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_FlowSchemaSpec_To_flowregistration_FlowSchemaSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_FlowSchema_To_flowregistration_FlowSchema is an autogenerated conversion function.
func Convert_v1alpha1_FlowSchema_To_flowregistration_FlowSchema(in *v1alpha1.FlowSchema, out *flowregistration.FlowSchema, s conversion.Scope) error {
	return autoConvert_v1alpha1_FlowSchema_To_flowregistration_FlowSchema(in, out, s)
}

func autoConvert_flowregistration_FlowSchema_To_v1alpha1_FlowSchema(in *flowregistration.FlowSchema, out *v1alpha1.FlowSchema, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_flowregistration_FlowSchemaSpec_To_v1alpha1_FlowSchemaSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_flowregistration_FlowSchema_To_v1alpha1_FlowSchema is an autogenerated conversion function.
func Convert_flowregistration_FlowSchema_To_v1alpha1_FlowSchema(in *flowregistration.FlowSchema, out *v1alpha1.FlowSchema, s conversion.Scope) error {
	return autoConvert_flowregistration_FlowSchema_To_v1alpha1_FlowSchema(in, out, s)
}

func autoConvert_v1alpha1_FlowSchemaList_To_flowregistration_FlowSchemaList(in *v1alpha1.FlowSchemaList, out *flowregistration.FlowSchemaList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]flowregistration.FlowSchema)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1alpha1_FlowSchemaList_To_flowregistration_FlowSchemaList is an autogenerated conversion function.
func Convert_v1alpha1_FlowSchemaList_To_flowregistration_FlowSchemaList(in *v1alpha1.FlowSchemaList, out *flowregistration.FlowSchemaList, s conversion.Scope) error {
	return autoConvert_v1alpha1_FlowSchemaList_To_flowregistration_FlowSchemaList(in, out, s)
}

func autoConvert_flowregistration_FlowSchemaList_To_v1alpha1_FlowSchemaList(in *flowregistration.FlowSchemaList, out *v1alpha1.FlowSchemaList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]v1alpha1.FlowSchema)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_flowregistration_FlowSchemaList_To_v1alpha1_FlowSchemaList is an autogenerated conversion function.
func Convert_flowregistration_FlowSchemaList_To_v1alpha1_FlowSchemaList(in *flowregistration.FlowSchemaList, out *v1alpha1.FlowSchemaList, s conversion.Scope) error {
	return autoConvert_flowregistration_FlowSchemaList_To_v1alpha1_FlowSchemaList(in, out, s)
}

func autoConvert_v1alpha1_FlowSchemaSpec_To_flowregistration_FlowSchemaSpec(in *v1alpha1.FlowSchemaSpec, out *flowregistration.FlowSchemaSpec, s conversion.Scope) error {
	if err := Convert_v1alpha1_RequestPriority_To_flowregistration_RequestPriority(&in.RequestPriority, &out.RequestPriority, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_FlowDistinguisher_To_flowregistration_FlowDistinguisher(&in.FlowDistinguisher, &out.FlowDistinguisher, s); err != nil {
		return err
	}
	out.Match = *(*[]*flowregistration.Match)(unsafe.Pointer(&in.Match))
	return nil
}

// Convert_v1alpha1_FlowSchemaSpec_To_flowregistration_FlowSchemaSpec is an autogenerated conversion function.
func Convert_v1alpha1_FlowSchemaSpec_To_flowregistration_FlowSchemaSpec(in *v1alpha1.FlowSchemaSpec, out *flowregistration.FlowSchemaSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_FlowSchemaSpec_To_flowregistration_FlowSchemaSpec(in, out, s)
}

func autoConvert_flowregistration_FlowSchemaSpec_To_v1alpha1_FlowSchemaSpec(in *flowregistration.FlowSchemaSpec, out *v1alpha1.FlowSchemaSpec, s conversion.Scope) error {
	if err := Convert_flowregistration_RequestPriority_To_v1alpha1_RequestPriority(&in.RequestPriority, &out.RequestPriority, s); err != nil {
		return err
	}
	if err := Convert_flowregistration_FlowDistinguisher_To_v1alpha1_FlowDistinguisher(&in.FlowDistinguisher, &out.FlowDistinguisher, s); err != nil {
		return err
	}
	out.Match = *(*[]*v1alpha1.Match)(unsafe.Pointer(&in.Match))
	return nil
}

// Convert_flowregistration_FlowSchemaSpec_To_v1alpha1_FlowSchemaSpec is an autogenerated conversion function.
func Convert_flowregistration_FlowSchemaSpec_To_v1alpha1_FlowSchemaSpec(in *flowregistration.FlowSchemaSpec, out *v1alpha1.FlowSchemaSpec, s conversion.Scope) error {
	return autoConvert_flowregistration_FlowSchemaSpec_To_v1alpha1_FlowSchemaSpec(in, out, s)
}

func autoConvert_v1alpha1_InSet_To_flowregistration_InSet(in *v1alpha1.InSet, out *flowregistration.InSet, s conversion.Scope) error {
	out.Field = in.Field
	out.Set = *(*[]string)(unsafe.Pointer(&in.Set))
	return nil
}

// Convert_v1alpha1_InSet_To_flowregistration_InSet is an autogenerated conversion function.
func Convert_v1alpha1_InSet_To_flowregistration_InSet(in *v1alpha1.InSet, out *flowregistration.InSet, s conversion.Scope) error {
	return autoConvert_v1alpha1_InSet_To_flowregistration_InSet(in, out, s)
}

func autoConvert_flowregistration_InSet_To_v1alpha1_InSet(in *flowregistration.InSet, out *v1alpha1.InSet, s conversion.Scope) error {
	out.Field = in.Field
	out.Set = *(*[]string)(unsafe.Pointer(&in.Set))
	return nil
}

// Convert_flowregistration_InSet_To_v1alpha1_InSet is an autogenerated conversion function.
func Convert_flowregistration_InSet_To_v1alpha1_InSet(in *flowregistration.InSet, out *v1alpha1.InSet, s conversion.Scope) error {
	return autoConvert_flowregistration_InSet_To_v1alpha1_InSet(in, out, s)
}

func autoConvert_v1alpha1_Match_To_flowregistration_Match(in *v1alpha1.Match, out *flowregistration.Match, s conversion.Scope) error {
	out.And = (*flowregistration.And)(unsafe.Pointer(in.And))
	return nil
}

// Convert_v1alpha1_Match_To_flowregistration_Match is an autogenerated conversion function.
func Convert_v1alpha1_Match_To_flowregistration_Match(in *v1alpha1.Match, out *flowregistration.Match, s conversion.Scope) error {
	return autoConvert_v1alpha1_Match_To_flowregistration_Match(in, out, s)
}

func autoConvert_flowregistration_Match_To_v1alpha1_Match(in *flowregistration.Match, out *v1alpha1.Match, s conversion.Scope) error {
	out.And = (*v1alpha1.And)(unsafe.Pointer(in.And))
	return nil
}

// Convert_flowregistration_Match_To_v1alpha1_Match is an autogenerated conversion function.
func Convert_flowregistration_Match_To_v1alpha1_Match(in *flowregistration.Match, out *v1alpha1.Match, s conversion.Scope) error {
	return autoConvert_flowregistration_Match_To_v1alpha1_Match(in, out, s)
}

func autoConvert_v1alpha1_MatchAll_To_flowregistration_MatchAll(in *v1alpha1.MatchAll, out *flowregistration.MatchAll, s conversion.Scope) error {
	out.Field = in.Field
	return nil
}

// Convert_v1alpha1_MatchAll_To_flowregistration_MatchAll is an autogenerated conversion function.
func Convert_v1alpha1_MatchAll_To_flowregistration_MatchAll(in *v1alpha1.MatchAll, out *flowregistration.MatchAll, s conversion.Scope) error {
	return autoConvert_v1alpha1_MatchAll_To_flowregistration_MatchAll(in, out, s)
}

func autoConvert_flowregistration_MatchAll_To_v1alpha1_MatchAll(in *flowregistration.MatchAll, out *v1alpha1.MatchAll, s conversion.Scope) error {
	out.Field = in.Field
	return nil
}

// Convert_flowregistration_MatchAll_To_v1alpha1_MatchAll is an autogenerated conversion function.
func Convert_flowregistration_MatchAll_To_v1alpha1_MatchAll(in *flowregistration.MatchAll, out *v1alpha1.MatchAll, s conversion.Scope) error {
	return autoConvert_flowregistration_MatchAll_To_v1alpha1_MatchAll(in, out, s)
}

func autoConvert_v1alpha1_NotEquals_To_flowregistration_NotEquals(in *v1alpha1.NotEquals, out *flowregistration.NotEquals, s conversion.Scope) error {
	out.Field = in.Field
	out.Value = in.Value
	return nil
}

// Convert_v1alpha1_NotEquals_To_flowregistration_NotEquals is an autogenerated conversion function.
func Convert_v1alpha1_NotEquals_To_flowregistration_NotEquals(in *v1alpha1.NotEquals, out *flowregistration.NotEquals, s conversion.Scope) error {
	return autoConvert_v1alpha1_NotEquals_To_flowregistration_NotEquals(in, out, s)
}

func autoConvert_flowregistration_NotEquals_To_v1alpha1_NotEquals(in *flowregistration.NotEquals, out *v1alpha1.NotEquals, s conversion.Scope) error {
	out.Field = in.Field
	out.Value = in.Value
	return nil
}

// Convert_flowregistration_NotEquals_To_v1alpha1_NotEquals is an autogenerated conversion function.
func Convert_flowregistration_NotEquals_To_v1alpha1_NotEquals(in *flowregistration.NotEquals, out *v1alpha1.NotEquals, s conversion.Scope) error {
	return autoConvert_flowregistration_NotEquals_To_v1alpha1_NotEquals(in, out, s)
}

func autoConvert_v1alpha1_NotInSet_To_flowregistration_NotInSet(in *v1alpha1.NotInSet, out *flowregistration.NotInSet, s conversion.Scope) error {
	out.Field = in.Field
	out.Set = *(*[]string)(unsafe.Pointer(&in.Set))
	return nil
}

// Convert_v1alpha1_NotInSet_To_flowregistration_NotInSet is an autogenerated conversion function.
func Convert_v1alpha1_NotInSet_To_flowregistration_NotInSet(in *v1alpha1.NotInSet, out *flowregistration.NotInSet, s conversion.Scope) error {
	return autoConvert_v1alpha1_NotInSet_To_flowregistration_NotInSet(in, out, s)
}

func autoConvert_flowregistration_NotInSet_To_v1alpha1_NotInSet(in *flowregistration.NotInSet, out *v1alpha1.NotInSet, s conversion.Scope) error {
	out.Field = in.Field
	out.Set = *(*[]string)(unsafe.Pointer(&in.Set))
	return nil
}

// Convert_flowregistration_NotInSet_To_v1alpha1_NotInSet is an autogenerated conversion function.
func Convert_flowregistration_NotInSet_To_v1alpha1_NotInSet(in *flowregistration.NotInSet, out *v1alpha1.NotInSet, s conversion.Scope) error {
	return autoConvert_flowregistration_NotInSet_To_v1alpha1_NotInSet(in, out, s)
}

func autoConvert_v1alpha1_NotMatchAll_To_flowregistration_NotMatchAll(in *v1alpha1.NotMatchAll, out *flowregistration.NotMatchAll, s conversion.Scope) error {
	out.Field = in.Field
	return nil
}

// Convert_v1alpha1_NotMatchAll_To_flowregistration_NotMatchAll is an autogenerated conversion function.
func Convert_v1alpha1_NotMatchAll_To_flowregistration_NotMatchAll(in *v1alpha1.NotMatchAll, out *flowregistration.NotMatchAll, s conversion.Scope) error {
	return autoConvert_v1alpha1_NotMatchAll_To_flowregistration_NotMatchAll(in, out, s)
}

func autoConvert_flowregistration_NotMatchAll_To_v1alpha1_NotMatchAll(in *flowregistration.NotMatchAll, out *v1alpha1.NotMatchAll, s conversion.Scope) error {
	out.Field = in.Field
	return nil
}

// Convert_flowregistration_NotMatchAll_To_v1alpha1_NotMatchAll is an autogenerated conversion function.
func Convert_flowregistration_NotMatchAll_To_v1alpha1_NotMatchAll(in *flowregistration.NotMatchAll, out *v1alpha1.NotMatchAll, s conversion.Scope) error {
	return autoConvert_flowregistration_NotMatchAll_To_v1alpha1_NotMatchAll(in, out, s)
}

func autoConvert_v1alpha1_NotPatternMatch_To_flowregistration_NotPatternMatch(in *v1alpha1.NotPatternMatch, out *flowregistration.NotPatternMatch, s conversion.Scope) error {
	out.Field = in.Field
	out.Pattern = in.Pattern
	return nil
}

// Convert_v1alpha1_NotPatternMatch_To_flowregistration_NotPatternMatch is an autogenerated conversion function.
func Convert_v1alpha1_NotPatternMatch_To_flowregistration_NotPatternMatch(in *v1alpha1.NotPatternMatch, out *flowregistration.NotPatternMatch, s conversion.Scope) error {
	return autoConvert_v1alpha1_NotPatternMatch_To_flowregistration_NotPatternMatch(in, out, s)
}

func autoConvert_flowregistration_NotPatternMatch_To_v1alpha1_NotPatternMatch(in *flowregistration.NotPatternMatch, out *v1alpha1.NotPatternMatch, s conversion.Scope) error {
	out.Field = in.Field
	out.Pattern = in.Pattern
	return nil
}

// Convert_flowregistration_NotPatternMatch_To_v1alpha1_NotPatternMatch is an autogenerated conversion function.
func Convert_flowregistration_NotPatternMatch_To_v1alpha1_NotPatternMatch(in *flowregistration.NotPatternMatch, out *v1alpha1.NotPatternMatch, s conversion.Scope) error {
	return autoConvert_flowregistration_NotPatternMatch_To_v1alpha1_NotPatternMatch(in, out, s)
}

func autoConvert_v1alpha1_NotSuperSet_To_flowregistration_NotSuperSet(in *v1alpha1.NotSuperSet, out *flowregistration.NotSuperSet, s conversion.Scope) error {
	out.Field = in.Field
	out.Set = *(*[]string)(unsafe.Pointer(&in.Set))
	return nil
}

// Convert_v1alpha1_NotSuperSet_To_flowregistration_NotSuperSet is an autogenerated conversion function.
func Convert_v1alpha1_NotSuperSet_To_flowregistration_NotSuperSet(in *v1alpha1.NotSuperSet, out *flowregistration.NotSuperSet, s conversion.Scope) error {
	return autoConvert_v1alpha1_NotSuperSet_To_flowregistration_NotSuperSet(in, out, s)
}

func autoConvert_flowregistration_NotSuperSet_To_v1alpha1_NotSuperSet(in *flowregistration.NotSuperSet, out *v1alpha1.NotSuperSet, s conversion.Scope) error {
	out.Field = in.Field
	out.Set = *(*[]string)(unsafe.Pointer(&in.Set))
	return nil
}

// Convert_flowregistration_NotSuperSet_To_v1alpha1_NotSuperSet is an autogenerated conversion function.
func Convert_flowregistration_NotSuperSet_To_v1alpha1_NotSuperSet(in *flowregistration.NotSuperSet, out *v1alpha1.NotSuperSet, s conversion.Scope) error {
	return autoConvert_flowregistration_NotSuperSet_To_v1alpha1_NotSuperSet(in, out, s)
}

func autoConvert_v1alpha1_PatternMatch_To_flowregistration_PatternMatch(in *v1alpha1.PatternMatch, out *flowregistration.PatternMatch, s conversion.Scope) error {
	out.Field = in.Field
	out.Pattern = in.Pattern
	return nil
}

// Convert_v1alpha1_PatternMatch_To_flowregistration_PatternMatch is an autogenerated conversion function.
func Convert_v1alpha1_PatternMatch_To_flowregistration_PatternMatch(in *v1alpha1.PatternMatch, out *flowregistration.PatternMatch, s conversion.Scope) error {
	return autoConvert_v1alpha1_PatternMatch_To_flowregistration_PatternMatch(in, out, s)
}

func autoConvert_flowregistration_PatternMatch_To_v1alpha1_PatternMatch(in *flowregistration.PatternMatch, out *v1alpha1.PatternMatch, s conversion.Scope) error {
	out.Field = in.Field
	out.Pattern = in.Pattern
	return nil
}

// Convert_flowregistration_PatternMatch_To_v1alpha1_PatternMatch is an autogenerated conversion function.
func Convert_flowregistration_PatternMatch_To_v1alpha1_PatternMatch(in *flowregistration.PatternMatch, out *v1alpha1.PatternMatch, s conversion.Scope) error {
	return autoConvert_flowregistration_PatternMatch_To_v1alpha1_PatternMatch(in, out, s)
}

func autoConvert_v1alpha1_RequestPriority_To_flowregistration_RequestPriority(in *v1alpha1.RequestPriority, out *flowregistration.RequestPriority, s conversion.Scope) error {
	out.Name = in.Name
	return nil
}

// Convert_v1alpha1_RequestPriority_To_flowregistration_RequestPriority is an autogenerated conversion function.
func Convert_v1alpha1_RequestPriority_To_flowregistration_RequestPriority(in *v1alpha1.RequestPriority, out *flowregistration.RequestPriority, s conversion.Scope) error {
	return autoConvert_v1alpha1_RequestPriority_To_flowregistration_RequestPriority(in, out, s)
}

func autoConvert_flowregistration_RequestPriority_To_v1alpha1_RequestPriority(in *flowregistration.RequestPriority, out *v1alpha1.RequestPriority, s conversion.Scope) error {
	out.Name = in.Name
	return nil
}

// Convert_flowregistration_RequestPriority_To_v1alpha1_RequestPriority is an autogenerated conversion function.
func Convert_flowregistration_RequestPriority_To_v1alpha1_RequestPriority(in *flowregistration.RequestPriority, out *v1alpha1.RequestPriority, s conversion.Scope) error {
	return autoConvert_flowregistration_RequestPriority_To_v1alpha1_RequestPriority(in, out, s)
}

func autoConvert_v1alpha1_SuperSet_To_flowregistration_SuperSet(in *v1alpha1.SuperSet, out *flowregistration.SuperSet, s conversion.Scope) error {
	out.Field = in.Field
	out.Set = *(*[]string)(unsafe.Pointer(&in.Set))
	return nil
}

// Convert_v1alpha1_SuperSet_To_flowregistration_SuperSet is an autogenerated conversion function.
func Convert_v1alpha1_SuperSet_To_flowregistration_SuperSet(in *v1alpha1.SuperSet, out *flowregistration.SuperSet, s conversion.Scope) error {
	return autoConvert_v1alpha1_SuperSet_To_flowregistration_SuperSet(in, out, s)
}

func autoConvert_flowregistration_SuperSet_To_v1alpha1_SuperSet(in *flowregistration.SuperSet, out *v1alpha1.SuperSet, s conversion.Scope) error {
	out.Field = in.Field
	out.Set = *(*[]string)(unsafe.Pointer(&in.Set))
	return nil
}

// Convert_flowregistration_SuperSet_To_v1alpha1_SuperSet is an autogenerated conversion function.
func Convert_flowregistration_SuperSet_To_v1alpha1_SuperSet(in *flowregistration.SuperSet, out *v1alpha1.SuperSet, s conversion.Scope) error {
	return autoConvert_flowregistration_SuperSet_To_v1alpha1_SuperSet(in, out, s)
}
